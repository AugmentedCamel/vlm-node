{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "compute-node.workerStatefulSetName" . }}
  labels:
    {{- include "compute-node.nodeLabels" . | nindent 4 }}
spec:
  serviceName: {{ include "compute-node.workerServiceName" . }}
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      {{- include "compute-node.nodeSelectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        {{- include "compute-node.nodeSelectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: worker
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "compute-node.serviceAccountName" . }}
      {{- end }}
      containers:
      - name: worker
        image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
        imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
        env:
        {{- range $key, $value := .Values.worker.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "compute-node.configMapName" . }}
        - secretRef:
            name: {{ include "compute-node.secretName" . }}
        resources:
          {{- toYaml .Values.worker.resources | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: "/data"
        workingDir: /app
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "compute-node.storageVolumeName" . }}
{{- end }}
